apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ .Release.Name }}-database:3306/{{ .Values.database.mysqlDatabase }}"
            - name: DB_USERNAME
              value: "{{ .Values.database.mysqlUser }}"
            - name: DB_PASSWORD
              value: "{{ .Values.database.mysqlPassword }}"
            - name: MAIL_URL
              value: "http://your-mail-service-url:8081"  
            - name: RESOURCE_URL
              value: "http://your-resource-service-url:8080"  

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-database
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-database
    spec:
      containers:
        - name: database
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.database.mysqlRootPassword }}
            - name: MYSQL_DATABASE
              value: {{ .Values.database.mysqlDatabase }}
            - name: MYSQL_USER
              value: {{ .Values.database.mysqlUser }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.database.mysqlPassword }}
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-persistent-storage

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-frontend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-frontend
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          ports:
            - containerPort: 80